openapi: 3.0.4
info:
  title: QRead.backend - OpenAPI 3.0
  description: |-
    Backend for our QRead FYP project
  version: "1.0"
externalDocs:
  description: Project repository
  url: https://github.com/QRead-app/QRead.backend
servers:
  - url: http://127.0.0.1
tags:
  # - name: Borrower
  #   description: APIs for borrowers
  - name: Librarian
    description: APIs for librarians
  - name: Admin
    description: APIs for admins
paths:
  /forgot-password:
    post:
      summary: Forgot password
      description: An email will be sent to the user which should be followed by an API call to /reset-password
      tags:
        - Librarian

        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@email.com
                redirect:
                  type: string
                  example: http://localhost:5173
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Reset password email sent"
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing email field
              examples:
                Missing email:
                  value:
                    error: Missing email field
                Invalid email:
                  value:
                    error: Invalid email test.com
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Admin cannot use this service
        "404":
          description: Email not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Email not found"
  /reset-password:
    post:
      summary: Reset password
      description: The user should arrived at the API from their email link to reset password
      tags:
        - Librarian

        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                secret:
                  type: string
                  example: a83nfjgh49alsken4b2hf84jvka1248fb
                password:
                  type: string
                  example: examplePassword123
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Password successfully updated"
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing email field
              examples:
                Missing secret:
                  value:
                    error: Missing secret field
                Missing password:
                  value:
                    error: Missing password field
        "401":
          description: Wrong secret
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Wrong secret a83nfjgh49alsken4b2hf84jvka1248fb
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User does not exist"
  /{account_type}/login:
    post:
      summary: Authenticate user
      description: This API only authenticates user's credentials. An OTP will be sent to the user's email, it should be POST to /verify-otp for successful login, obtaining the session cookie. The OTP should be sent from qread.donotreply@gmail.com.
      parameters:
        - in: path
          name: account_type
          schema:
            type: string
            enum: [ADMIN, LIBRARIAN, BORROWER]
          required: true
          description: The user's account type
      tags:
        - Librarian

        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@email.com
                password:
                  type: string
                  example: abc123
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Authenticated"
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing email field
              examples:
                Missing email:
                  value:
                    error: Missing email field
                Missing password:
                  value:
                    error: Missing password field
                Invalid email:
                  value:
                    error: Invalid email test@email.com
                User suspended:
                  value:
                    error: User is suspended
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Authentication failed"
  /verify-otp:
    post:
      description: Verifies the user and assign a session cookie to the user
      summary: Verify otp and log user in
      tags:
        - Librarian

        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  example: 123456
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
          headers:
            Set-Cookie:
              schema:
                type: string
                example: SESSION=abcde12345; Path=/; HttpOnly
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing otp field
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Authentication failed"
              examples:
                Wrong OTP:
                  value:
                    error: Wrong OTP
                Not authenticated:
                  description: The user have not log in via /{account_type}/login
                  value:
                    error: Not authenticated
  /logout:
    post:
      description: Log the user out and remove the session cookie
      summary: Log out of the system
      tags:
        - Librarian
        - Admin

      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logout successful"
              examples:
                Logged out:
                  value:
                    message: "Logout successful"
                No session:
                  value:
                    message: "No active session"
  /book:
    get:
      summary: Get book by any parameters
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: false
          description: The book's ID
        - in: query
          name: title
          schema:
            type: string
          required: false
          description: The book's title
        - in: query
          name: description
          schema:
            type: string
          required: false
          description: The book's description
        - in: query
          name: author
          schema:
            type: string
          required: false
          description: The book's description
        - in: query
          name: condition
          schema:
            type: string
            enum:
              [NEW, LIKE_NEW, VERY_GOOD, GOOD, FAIR, WORN, DAMAGED, UNUSABLE]
          required: false
          description: The book's condition
        - in: query
          name: on_loan
          schema:
            type: boolean
          required: false
          description: The book's loan status
      tags:
        - Librarian

        - Admin
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Book(s) retrieved"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12
                      title:
                        type: string
                        example: test_title
                      description:
                        type: string
                        example: test_description
                      author:
                        type: string
                        example: test_author
                      condition:
                        type: string
                        enum:
                          [
                            NEW,
                            LIKE_NEW,
                            VERY_GOOD,
                            GOOD,
                            FAIR,
                            WORN,
                            DAMAGED,
                            UNUSABLE,
                          ]
                        example: NEW
                      on_loan:
                        type: boolean
                        example: False
              examples:
                bookRetrieved:
                  summary: Book(s) retrieved
                  value:
                    message: "Book(s) retrieved"
                    data:
                      id: 12
                      title: test_title
                      description: test_description
                      author: test_author
                      condition: NEW
                      on_loan: false
                noBookFound:
                  summary: No book found
                  value:
                    message: "No book found"
                    data: null
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing email field
              examples:
                Missing email:
                  value:
                    error: Missing email field
                Missing password:
                  value:
                    error: Missing password field
                Invalid email:
                  value:
                    error: Invalid email test@email.com

  /librarian/books:
    get:
      summary: Get all book by matching (may be deprecated due to /book)
      parameters:
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: The search term
      tags:
        - Librarian
      security:
        - qread.backend_auth: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Book search success"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 12
                        title:
                          type: string
                          example: test_title
                        description:
                          type: string
                          example: test_description
                        author:
                          type: string
                          example: test_author
                        condition:
                          type: string
                          enum:
                            [
                              NEW,
                              LIKE_NEW,
                              VERY_GOOD,
                              GOOD,
                              FAIR,
                              WORN,
                              DAMAGED,
                              UNUSABLE,
                            ]
                          example: NEW
                        on_loan:
                          type: boolean
                          example: False
                    example:
                      - id: 12
                        title: test_title
                        description: test_description
                        author: test_author
                        condition: NEW
                        on_loan: false
                      - id: 15
                        title: another_book
                        description: another_description
                        author: another_author
                        condition: GOOD
                        on_loan: true
              examples:
                Books retrieved:
                  value:
                    message: Book search success
                    data:
                      - id: 12
                        title: test_title
                        description: test_description
                        author: test_author
                        condition: NEW
                        on_loan: false
                      - id: 15
                        title: another_book
                        description: another_description
                        author: another_author
                        condition: GOOD
                        on_loan: true
                No books found:
                  value:
                    message: No books found
                    data: null
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
  /librarian/book:
    delete:
      summary: Delete a book
      tags:
        - Librarian
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: True
          description: The book id to be deleted
      security:
        - qread.backend_auth: []
      responses:
        "200":
          description: Book deleted successfully
        "400":
          description: Error responses
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing book_id field
              examples:
                Missing book_id:
                  value:
                    error: Missing book_id field
                Invalid book_id:
                  value:
                    error: Invalid book_id test
        "404":
          description: Book id not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Book id 50 not found
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
    put:
      summary: Update a book
      tags:
        - Librarian
      security:
        - qread.backend_auth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  example: 435
                title:
                  type: string
                  example: test_title
                description:
                  type: string
                  example: test_description
                author:
                  type: string
                  example: test_author
                condition:
                  type: string
                  enum:
                    [
                      NEW,
                      LIKE_NEW,
                      VERY_GOOD,
                      GOOD,
                      FAIR,
                      WORN,
                      DAMAGED,
                      UNUSABLE,
                    ]
                  example: NEW
                on_load:
                  type: boolean
                  example: False
      responses:
        "200":
          description: Book updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Book updated successfully"
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        "404":
          description: Missing id
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing id field"
  /librarian/fine:
    post:
      summary: Issue a fine
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 323
                transaction_id:
                  type: integer
                  example: 230
                amount:
                  type: number
                  format: double
                  example: 34.50
                reason:
                  type: string
                  example: Damaged book
      tags:
        - Librarian
      security:
        - qread.backend_auth: []
      responses:
        "200":
          description: Fine issued
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Fine issued successfully
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing user_id field
              examples:
                Missing user_id:
                  value:
                    error: Missing user_id field
                Missing transaction_id:
                  value:
                    error: Missing transaction_id field
                Missing amount:
                  value:
                    error: Missing amount field
                Missing reason:
                  value:
                    error: Missing reason field
                Invalid user_id:
                  value:
                    error: Invalid user_id test
                Invalid transaction_id:
                  value:
                    error: Invalid transaction_id test
                Invalid amount:
                  value:
                    error: Invalid amount test
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
  /librarian/return-book:
    post:
      summary: Return a book
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 323
      tags:
        - Librarian
      security:
        - qread.backend_auth: []
      responses:
        "200":
          description: Fine issued
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Book returned successfully
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing id field
              examples:
                Missing id:
                  value:
                    error: Missing user_id field
                Invalid id:
                  value:
                    error: Invalid id test
                Book not borrowed:
                  value:
                    error: Book id 50 is not borrowed
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Book id 49 not found
  /new-librarian:
    post:
      summary: Create a new librarian account
      tags:
        - Librarian
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                secret:
                  type: string
                  example: a83nfjgh49alsken4b2hf84jvka1248fb
                name:
                  type: string
                  example: test_librarian
                password:
                  type: string
                  example: examplePassword123
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Librarian created successfully"
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing email field
              examples:
                Missing secret:
                  value:
                    error: Missing secret field
                Missing name:
                  value:
                    error: Missing name field
                Missing password:
                  value:
                    error: Missing password field
                Email already registered:
                  value:
                    error: Email test@test.com is already registered
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Wrong secret a83nfjgh49alsken4b2hf84jvka1248fb
              examples:
                Wrong secret:
                  value:
                    error: Wrong secret a83nfjgh49alsken4b2hf84jvka1248fb
                Not authenticated:
                  value:
                    error: Not authenticated

  /admin/users:
    get:
      summary: Retrieve users by search
      tags:
        - Admin
      security:
        - qread.backend_auth: []
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: false
          description: User's id
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: User's name
        - in: query
          name: email
          schema:
            type: string
          required: false
          description: User's email
        - in: query
          name: type
          schema:
            type: string
            format: enum
            enum: ["ADMIN", "LIBRARIAN", "BORROWER"]
          required: false
          description: User's account type
        - in: query
          name: state
          schema:
            type: string
            format: enum
            enum: ["ACTIVE", "SUSPENDED"]
          required: false
          description: User's account state
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Users retrieved
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 12
                        name:
                          type: string
                          example: name
                        email:
                          type: string
                          example: test@email.com
                        account_type:
                          type: string
                          enum: [ADMIN, LIBRARIAN, BORROWER]
                          example: LIBRARIAN
                        account_state:
                          type: string
                          enum: [ACTIVE, SUSPENDED]
                          example: ACTIVE
                    example:
                      - user:
                          id: 12
                          name: admin_name
                          email: admin@email.com
                          account_type: ADMIN
                          account_state: ACTIVE
                        transaction:
                          - id: 21
                            user_id: 12
                            book_id: 39
                            date: 2025-08-17T19:58:00Z
                            due: 2025-08-20T19:58:00Z
                            returned: False
                          - id: 22
                            user_id: 12
                            book_id: 40
                            date: 2025-08-17T19:58:00Z
                            due: 2025-08-20T19:58:00Z
                            returned: False
                        fine:
                          - id: 33
                            user_id: 12
                            transaction_id: 21
                            reason: Late return
                            amount: 50
                            date: 2025-08-17T19:58:00Z
                            paid: False
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
  /admin/user:
    delete:
      summary: Delete a user
      tags:
        - Admin
      security:
        - qread.backend_auth: []
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
          description: The user's id to be deleted
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User deleted successfully"
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing id field
              examples:
                Missing id:
                  value:
                    error: Missing id field
                Invalid id:
                  value:
                    error: Invalid id 49
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        "404":
          description: User id not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User id 48 not found
  /admin/suspend-user:
    post:
      summary: Suspend a user
      tags:
        - Admin
      security:
        - qread.backend_auth: []
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 49
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User suspended successfully"
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing id field
              examples:
                Missing id:
                  value:
                    error: Missing id field
                Invalid id:
                  value:
                    error: Invalid id 49
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        "404":
          description: User id not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User id 48 not found
  /admin/reinstate-user:
    post:
      summary: Reinstate a user
      tags:
        - Admin
      security:
        - qread.backend_auth: []
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 49
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User reinstated successfully"
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing id field
              examples:
                Missing id:
                  value:
                    error: Missing id field
                Invalid id:
                  value:
                    error: Invalid id 49
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        "404":
          description: User id not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User id 48 not found
  /admin/register-librarian:
    post:
      summary: Register a new librarian
      description: An email will be sent to the librarian which should be followed by an API call to /new-librarian
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@email.com
                redirect:
                  type: string
                  example: http://localhost:5173
      security:
        - qread.backend_auth: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invitation email sent"
        "400":
          description: Error operations
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing email field
              examples:
                Missing email:
                  value:
                    error: Missing email field
                Invalid email:
                  value:
                    error: Invalid email test.com
                Email already exist:
                  value:
                    error: Email already exist
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
  /admin/app-setting:
    put:
      summary: Update a setting
      tags:
        - Admin
      security:
        - qread.backend_auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  example: reminder_x_days_before_due
                value:
                  type: integer
                  example: 5
      responses:
        "200":
          description: App setting updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Setting updated successfully"
        "400":
          description: Key not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Key random_key not found"
              examples:
                Missing key:
                  value:
                    error: Missing key field
                Missing value:
                  value:
                    error: Missing value field
        "401":
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        "404":
          description: Key not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Key random_key not found"

components:
  securitySchemes:
    qread.backend_auth:
      type: apiKey
      in: cookie
      name: session
